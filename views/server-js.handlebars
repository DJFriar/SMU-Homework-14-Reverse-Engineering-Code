<h3>server.js</h3>
<div uk-grid>
  <div class="uk-width-1-2@s">
    <h5>Code Contents</h5>
    <pre class="line-numbers"><code class="language-javascript">
// Requiring necessary npm packages
var express = require("express");
var session = require("express-session");
// Requiring passport as we've configured it
var passport = require("./config/passport");

// Setting up port and requiring models for syncing
var PORT = process.env.PORT || 8080;
var db = require("./models");

// Creating express app and configuring middleware needed for authentication
var app = express();
app.use(express.urlencoded({ extended: true }));
app.use(express.json());
app.use(express.static("public"));
// We need to use sessions to keep track of our user's login status
app.use(session({ secret: "keyboard cat", resave: true, saveUninitialized: true }));
app.use(passport.initialize());
app.use(passport.session());

// Requiring our routes
require("./routes/html-routes.js")(app);
require("./routes/api-routes.js")(app);

// Syncing our database and logging a message to the user upon success
db.sequelize.sync().then(function() {
  app.listen(PORT, function() {
    console.log("==> ðŸŒŽ  Listening on port %s. Visit http://localhost:%s/ in your browser.", PORT, PORT);
  });
});
    </code></pre>
  </div>
  <div class="uk-width-1-2@s">
    <h5>Code Definitions</h5>
    <span class="fab fa-js bigIcon"></span>
    <p>This page is primary page that powers the app. It is the first page loaded. Let's check it out:</p>
    <ul>
      <li>Lines 3 &amp; 4 import the required fiels for express and express-session.</li>
      <li>Line 6 imports the <a href="/passport-js">passport.js</a> file that powers our user authentication.</li>
      <li>Line 9 sets the port to whatever the environment has set, and if that isn't available will default to 8080.</li>
      <li>Line 10 imports the models folder to handle our DB related actions.</li>
      <li>Lines 13-16 configure Express and tell it to use our public folder.</li>
      <li>Lines 18-20 configure Express-Sessions to keep track of our user's login status.</li>
      <li>Lines 23 &amp; 24 tell Express to use our two route files to handle routing.</li>
      <li>Lines 27-31 connect to our DB and once that is finished will start the app and log to the console the URL and Port being used.</li>
    </ul>
  </div>
</div>