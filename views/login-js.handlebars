<h3>login.js</h3>
<div uk-grid>
  <div class="uk-width-1-2@s">
    <h5>Code Contents</h5>
    <pre class="line-numbers"><code class="language-javascript">
$(document).ready(function() {
  // Getting references to our form and inputs
  var loginForm = $("form.login");
  var emailInput = $("input#email-input");
  var passwordInput = $("input#password-input");

  // When the form is submitted, we validate there's an email and password entered
  loginForm.on("submit", function(event) {
    event.preventDefault();
    var userData = {
      email: emailInput.val().trim(),
      password: passwordInput.val().trim()
    };

    if (!userData.email || !userData.password) {
      return;
    }

    // If we have an email and password we run the loginUser function and clear the form
    loginUser(userData.email, userData.password);
    emailInput.val("");
    passwordInput.val("");
  });

  // loginUser does a post to our "api/login" route and if successful, redirects us the the members page
  function loginUser(email, password) {
    $.post("/api/login", {
      email: email,
      password: password
    })
      .then(function() {
        window.location.replace("/members");
        // If there's an error, log the error
      })
      .catch(function(err) {
        console.log(err);
      });
  }
});
    </code></pre>
  </div>
  <div class="uk-width-1-2@s">
    <h5>Code Definitions</h5>
    <span class="fab fa-js bigIcon"></span>
    <p>
      This JavaScript page powers functions on the <a href="/login-html">login.html</a> page.
    </p>
    <ul>
      <li>Line 2 ensures that this page waits for all the data to be ready before executing commands.</li>
      <li>Lines 4-6 use jQuery to reference the forms and button on the page.</li>
      <li>
        Lines 9-24 runs when the Submit button is pressed on the login.html page.
        <ul>
          <li>Line 10 stops the default page refresh from happening.</li>
          <li>Lines 11-14 fetch the email and password that were entered by the user and store them as an object called userData.</li>
          <li>Lines 16-18 ensure that these fields are not blank. If either one is blank then this function is exited.</li>
          <li>If the function wasn't exited from the above check, then line 21 will execute and runs the function <span style="font-style: italic;">loginUser</span>, defined later on this page.</li>
          <li>Lines 22 and 23 clear the fields on the html page.</li>
        </ul>
      </li>
      <li>
        Lines 27-39 define the function <span style="font-style: italic;">loginUser</span>.
        <ul>
          <li>Lines 28-31 call the login API and pass in the JSON values of email and password.</li>
          <li>When the above promise is returned, then lines 32-35 will redirect the user to the <a href="/members-html">members</a> page.</li>
          <li>If an error is encountered then lines 36-38 will trigger. In this case it will log the error to the console.</li>
        </ul>
      </li>
    </ul>
  </div>
</div>